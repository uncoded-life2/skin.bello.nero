<?xml version="1.0" encoding="UTF-8"?>
<includes> 
    <include file="Views_Videos.xml"/>
    <include file="Views_Music.xml"/>
    <include file="Views_Pictures.xml"/>
    <include file="Views_Programs.xml"/>
    <include file="Views_Addons.xml"/>
	<include file="Views_PVR.xml"/>

    <include name="VideoViews">	
	<control type="group">
	    <include>InfoDialogsVisible_ZoomAnimation</include>
	    <include>ListView_Videos</include> <!-- id = 50 -->
	    <include condition="!Skin.HasSetting(BelloViewVideos)">BelloView_VideoLibrary</include> <!-- id = 66 -->
	    <include condition="!Skin.HasSetting(BelloViewVideos)">BelloView_VideoFiles</include> <!-- id = 661 -->
	    <include condition="!Skin.HasSetting(SlideViewVideos)">SlideView_Videos</include> <!-- id = 51 -->
	    <include condition="!Skin.HasSetting(GalleryViewVideos)">GalleryView_Videos</include> <!-- id = 52 -->
	    <include condition="!Skin.HasSetting(TilesViewVideos)">TilesView_Videos</include> <!-- id = 562 -->
	    <include condition="!Skin.HasSetting(ThumbnailsVideos)">ThumbnailsView</include> <!-- id = 56 -->
	    <include condition="!Skin.HasSetting(ThumbnailsVideos)">ThumbnailsView_Videos</include> <!-- id = 560 -->
	    <include condition="!Skin.HasSetting(ThumbnailsVideos)">ThumbnailsView_Videos_Posters</include> <!-- id = 561 -->
	    <include condition="!Skin.HasSetting(PostersViewVideos2)">PostersView_Videos2</include> <!-- id = 64 -->
	    <include condition="!Skin.HasSetting(BannersViewVideos)">BannersView_Videos</include> <!-- id = 57 -->
	    <include condition="!Skin.HasSetting(NetfilxViewVideos)">NetfilxView_Videos</include> <!-- id = 59 -->
	</control>	
        <include condition="!Skin.HasSetting(3DWallViewVideos)">3DWallView_Videos</include> <!-- id = 53 -->
        <include condition="!Skin.HasSetting(WallViewVideos)">WallView_Videos</include> <!-- id = 54 -->
        <include condition="!Skin.HasSetting(ListWallViewVideos)">ListWallView_Videos</include> <!-- id = 58 -->
        <include condition="!Skin.HasSetting(VideoWallViewVideos)">VideoWallView_Videos</include> <!-- id = 580 -->
        <include condition="!Skin.HasSetting(ShowtimeViewVideos)">ShowtimeView_Videos</include> <!-- id = 65 -->
        <include condition="!Skin.HasSetting(PostersViewVideos)">PostersView_Videos</include> <!-- id = 55 -->
    </include>
    
    <include name="MusicViews">
		<control type="group">
	        <include>InfoDialogsVisible_ZoomAnimation</include>
	        <include>ListView_Music</include> <!-- id = 50 -->
	        <include condition="!Skin.HasSetting(BelloViewMusic)">BelloView</include> <!-- id = 660 -->
	        <include condition="!Skin.HasSetting(SlideViewMusic)">SlideView_Music</include> <!-- id = 51 -->
	        <include condition="!Skin.HasSetting(GalleryViewMusic)">GalleryView_Music</include> <!-- id = 52 -->
	        <include condition="!Skin.HasSetting(TilesViewMusic)">TilesView_Music</include> <!-- id = 562 -->
	        <include condition="!Skin.HasSetting(ThumbnailsMusic)">ThumbnailsView</include> <!-- id = 56 -->
	        <include condition="!Skin.HasSetting(ThumbnailsMusic)">ThumbnailsView_Music</include> <!-- id = 560 -->
	        <include condition="!Skin.HasSetting(BannersViewMusic)">BannersView_Music</include> <!-- id = 57 -->
		</control>
	    <include condition="!Skin.HasSetting(3DWallViewMusic)">3DWallView_Music</include> <!-- id = 59 -->
    </include>

    <include name="PicturesViews">
		<control type="group">
	        <include>InfoDialogsVisible_ZoomAnimation</include>
	        <include>ListView_Pictures</include> <!-- id = 50 -->
	        <include>BelloView</include> <!-- id = 660 -->
	        <include>GalleryView_Pictures</include> <!-- id = 52 -->
	        <include>ThumbnailsView</include> <!-- id = 56 -->
	        <include>ThumbnailsView_Pictures</include> <!-- id = 560 -->
		</control>
    </include>

    <include name="ProgramsViews">
		<control type="group">
	        <include>InfoDialogsVisible_ZoomAnimation</include>
            <include>InfoDialogs_ContentInfoAnimation</include>
	        <include>ListView_Addons</include> <!-- id = 50 -->
	        <include>BelloView</include> <!-- id = 660 -->
	        <include>ThumbnailsView</include> <!-- id = 56 -->
	        <include>ThumbnailsView_Programs</include> <!-- id = 560 -->
		</control>
    </include>
    
    <include name="AddonsViews">
		<control type="group">
	        <include>InfoDialogsVisible_ZoomAnimation</include>
	        <include>ListView_Addons</include> <!-- id = 50 -->
	        <include>BelloView</include> <!-- id = 660 -->
	        <include>ThumbnailsView</include> <!-- id = 56 -->
	        <include>ThumbnailsView_Addons</include> <!-- id = 560 -->
		</control>
    </include>
    
    <include name="VideoPlaylistViews">
		<control type="group">
	        <include>InfoDialogsVisible_ZoomAnimation</include>
	        <include>ListView_Videos</include> <!-- id = 50 -->
	        <include condition="!Skin.HasSetting(BelloViewVideos)">BelloView_VideoLibrary</include> <!-- id = 66 -->
		</control>
    </include>

    <include name="MusicPlaylistViews">
		<control type="group">
	        <include>InfoDialogsVisible_ZoomAnimation</include>
	        <include>ListView_Music</include> <!-- id = 50 -->
	        <include condition="!Skin.HasSetting(BelloViewMusic)">BelloView</include> <!-- id = 660 -->
		</control>
    </include>


	<!-- =================== -->
	<!-- ==== List View ==== -->
	<!-- =================== -->
    <include name="ListView_Vars">
  		<left>34</left>
  		<top>150</top>
  		<width>1190</width>
  		<height>450</height>
		<onup>50</onup>
  		<ondown>50</ondown>
  		<onleft>600</onleft>
  		<onright>9444</onright>  			
  		<oninfo condition="Container.Content(Sets) | String.StartsWith(ListItem.Path,videodb://movies/sets/)">RunScript(script.skin.helper.service,action=textviewer,header=$INFO[ListItem.Label],message='"$VAR[GlobalPlotDescription]"')</oninfo>
  		<viewtype label="535">List</viewtype>  			
  	    <scrolltime tween="cubic" easing="out">300</scrolltime>
		<pagecontrol>600</pagecontrol>
    </include>
<!-- 
    <include name="ListView_FocusTexture">
		<control type="image">
			<left>10</left>
			<top>0</top>
            <width>580</width>
			<height>45</height>
            <texture background="true" border="3">views/list/focus.png</texture>
		</control>
    </include>
 -->
    <include name="ListView_Arrows">
			<control type="image">
				<left>62</left>
				<top>135</top>
				<width>24</width>
				<height>20</height>
				<texture colordiffuse="9fffffff">views/scrollbar/arrow.png</texture>
		  </control>
		  <control type="image">
				<left>62</left>
				<top>595</top>
				<width>24</width>
				<height>20</height>
				<texture colordiffuse="9fffffff" flipy="true">views/scrollbar/arrow.png</texture>
		  </control>
    </include>

    <include name="ListView_Scrollbar">
			<control type="scrollbar" id="600">
				<left>32</left>
				<top>165</top>
				<width>6</width>
				<height>425</height>
				<texturesliderbackground/>
				<texturesliderbar border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbar>
				<texturesliderbarfocus border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbarfocus>
				<textureslidernib/>
				<textureslidernibfocus/>
				<onleft>9000</onleft>
				<onright>50</onright>
				<showonepage>false</showonepage>
				<orientation>vertical</orientation>
			    <animation effect="fade" start="100" end="0" time="250" condition="!Control.HasFocus(600) + !Container.Scrolling">Conditional</animation>
				<visible>Control.IsVisible(50)</visible>
			</control>
    </include>

    <include name="ListView_PosterAndFanart">
  		<control type="image">
  			<left>383</left>
  			<top>-9</top>
  			<width>1123</width>
  			<height>594</height>
  			<aspectratio align="center" aligny="center">stretch</aspectratio>
  		    <texture background="true" colordiffuse="$VAR[Textures.GlobalColor]">views/list/shine.png</texture>
			<visible>!Skin.Hassetting(DisableVideoListView_PosterGlow)</visible>
  		</control>
		<!-- DiscArt view video -->
		<control type="image">
	        <left>631</left>
	        <top>189</top>
                <width>168</width>
                <height>168</height>
                <aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio>
                <texture background="true" fallback="osd/cd.png">$INFO[ListItem.Art(discart)]</texture>
	    	    <visible>!Container.Content(Artists)</visible>
	    	<animation type="Conditional" reversible="false" condition="!Container.OnNext + !Container.OnPrevious">
	            <effect type="slide" end="0,-110" center="auto" time="700" delay="100" loop="false" tween="cubic" easing="inout"/>
	    	    <effect type="fade" start="0" end="100" time="300"/>
            </animation>
			<visible>![Skin.HasSetting(DisableVideoListView_DiscArt) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)]</visible>
        </control>
      <!-- Poster Art -->
  		<control type="image">
  			<left>606</left>
  			<top>137</top>
  			<width>650</width>
  			<height>302</height>
  			<aspectratio align="right" aligny="center">stretch</aspectratio>
  			<texture background="true" border="70">views/other/panel.png</texture>
  			<bordersize>20</bordersize>
  		</control>
  		<control type="image">
  			<left>630</left>
  			<top>161</top>
  			<width>173</width>
  			<height>254</height>
  			<aspectratio align="center" aligny="center">scale</aspectratio>
  			<texture background="true" fallback="thumbs/fallback_poster_tp.png">$VAR[VarArtPoster]</texture>
  			<bordertexture border="15">thumbs/thumb_border.png</bordertexture>
  			<fadetime>IconCrossfadeTime</fadetime>
  		  <bordersize>6</bordersize>
  		</control>
  		<control type="image">
  			<left>630</left>
  			<top>161</top>
  			<width>173</width>
  			<height>254</height>
  			<aspectratio align="center" aligny="center">stretch</aspectratio>
  			<texture background="true">views/list/overlay_poster.png</texture>
  			<bordersize>6</bordersize>
  		</control>
      <!-- Fanart Art -->
  		<control type="image">
  			<left>800</left>
  			<top>161</top>
  			<width>432</width>
  			<height>254</height>
  			<aspectratio align="center" aligny="center">stretch</aspectratio>
  			<texture background="true" border="15">thumbs/thumb_border.png</texture>
  		</control>
  		<control type="image">
  			<left>800</left>
  			<top>161</top>
  			<width>432</width>
  			<height>254</height>
  			<aspectratio align="center" aligny="center">scale</aspectratio>
  	    <texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[VarArtFanart]</texture>
  			<fadetime>IconCrossfadeTime</fadetime>
  		  <bordersize>6</bordersize>
				<visible>![[Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)]
				       + ![[Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)]</visible>
  		</control>
  		<control type="image">
  			<left>800</left>
  			<top>161</top>
  			<width>432</width>
  			<height>254</height>
  			<aspectratio align="center" aligny="center">keep</aspectratio>
  	    <texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[VarArtFanart]</texture>
  			<fadetime>IconCrossfadeTime</fadetime>
  			<bordersize>40</bordersize>
				<visible>[[Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)]
				       | [[Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)]</visible>
  		</control>
  		<control type="image">
  			<left>800</left>
  			<top>161</top>
  			<width>432</width>
  			<height>254</height>
  			<aspectratio align="center" aligny="center">stretch</aspectratio>
  			<texture background="true">views/list/overlay_fanart.png</texture>
  			<bordersize>6</bordersize>
  		</control>
  		<!-- StarRating -->
  		<control type="image">
  			<left>665</left>
  			<top>425</top>
  			<width>120</width>
  			<height>23</height>
  			<aspectratio align="center" aligny="center">keep</aspectratio>
  	    <texture background="true">$VAR[StarRating]</texture>
  		</control>
  		<!-- Info -->
			<control type="label">
				<left>810</left>
				<top>421</top>
				<width>425</width>
				<font>FontSize_20</font>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<label>$VAR[GlobalInfo]</label>
			</control>
			<control type="textbox">
				<left>810</left>
				<top>456</top>
				<width>425</width>
				<height>135</height>
				<font>FontSize_20</font>
				<textcolor>9fffffff</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<align>justify</align>
				<autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				<label>$VAR[GlobalPlotDescription]</label>
				<visible>!String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
			</control>
			<control type="textbox">
				<left>630</left>
				<top>455</top>
				<width>605</width>
				<height>135</height>
				<font>FontSize_20</font>
				<textcolor>9fffffff</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<align>justify</align>
				<autoscroll delay="4000" time="2000" repeat="8000">!Window.IsActive(Textviewer)</autoscroll>
				<label>$VAR[GlobalPlotDescription]</label>
				<visible>Container.Content(Sets) | String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
			</control>
			<control type="grouplist">
				<left>630</left>
				<top>457</top>
				<width>200</width>
	      <height>200</height>
	      <itemgap>1.5</itemgap>
				<visible>!String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListViewInfoRow1]</label>
					<font>TextboxFont_18</font>
					<textcolor>9fffffff</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListViewInfoRow2]</label>
					<font>TextboxFont_18</font>
					<textcolor>9fffffff</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListViewInfoRow3]</label>
					<font>TextboxFont_18</font>
					<textcolor>9fffffff</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
			</control>
    </include>

    <include name="ListView_ThumbAndFanart">
  		    <control type="image">
  			    <left>392</left>
  			    <top>15</top>
  			    <width>1108</width>
  			    <height>525</height>
  			    <aspectratio align="center" aligny="center">stretch</aspectratio>
  		        <texture background="true" colordiffuse="$VAR[Textures.GlobalColor]">views/list/shine.png</texture>
				<visible>![Skin.Hassetting(DisableAddonsListView_PosterGlow) + Window.IsVisible(AddonBrowser.xml) + Container.HasFiles]</visible>
				<visible>![Skin.Hassetting(DisableVideoListView_PosterGlow) + String.IsEqual(Container.FolderPath,addons://sources/video)]</visible>
				<visible>![Skin.Hassetting(DisableMusicListView_ThumbGlow) + [Container.Content(Albums) | Container.Content(Artists) | Container.Content(Songs) | String.IsEqual(Container.FolderPath,addons://sources/audio)]]</visible>
				<visible>![Skin.Hassetting(DisablePicturesListView_PosterGlow) + Window.IsVisible(MyPics.xml) + Container.HasFiles]</visible>
  		    </control>
			<!-- Thumb -->
			<control type="image">
				<left>610</left>
				<top>140</top>
				<width>645</width>
				<height>274</height>
				<aspectratio align="right" aligny="center">stretch</aspectratio>
				<texture background="true" border="70">views/other/panel.png</texture>
				<bordersize>20</bordersize>
			</control>
			<control type="image">
				<left>634</left>
				<top>164</top>
				<width>227</width>
				<height>226</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true" fallback="thumbs/fallback_square_tp.png">$VAR[VarArtPoster]</texture>
  			<bordertexture border="15">thumbs/thumb_border.png</bordertexture>
  			<fadetime>IconCrossfadeTime</fadetime>
  		  <bordersize>6</bordersize>
			</control>
			<control type="image">
				<left>634</left>
				<top>164</top>
				<width>227</width>
				<height>226</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true" >views/list/overlay_square.png</texture>
				<bordersize>6</bordersize>
			</control>
			<!-- Fanart -->
			<control type="image">
				<left>858</left>
				<top>164</top>
				<width>373</width>
				<height>226</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
		    <texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[VarArtFanart]</texture>
  			<bordertexture border="15">thumbs/thumb_border.png</bordertexture>
  			<fadetime>IconCrossfadeTime</fadetime>
  		  <bordersize>6</bordersize>
			</control>
			<control type="image">
				<left>858</left>
				<top>164</top>
				<width>373</width>
				<height>226</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true" >views/list/overlay_fanart.png</texture>
				<bordersize>6</bordersize>
			</control>
			<!-- StarRating -->
			<control type="image">
				<left>690</left>
				<top>412</top>
				<width>120</width>
				<height>23</height>
				<aspectratio align="center" aligny="center">keep</aspectratio>
		    <texture background="true">$VAR[StarRating]</texture>
			</control>
			<!-- Info -->
			<control type="label">
				<left>860</left>
				<top>408</top>
				<width>375</width>
				<font>FontSize_20</font>
				<textcolor>$VAR[Text.GlobalColor]</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<label>$VAR[GlobalInfo]</label>
			</control>
			<control type="textbox">
				<left>820</left>
				<top>456</top>
				<width>415</width>
				<height>140</height>
				<font>FontSize_20</font>
				<textcolor>9fffffff</textcolor>
				<shadowcolor>77000000</shadowcolor>
				<align>justify</align>
				<autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				<label fallback="195">$VAR[GlobalPlotDescription]</label>
			</control>
			<control type="grouplist">
				<left>630</left>
				<top>457</top>
				<width>200</width>
	      <height>200</height>
	      <itemgap>1.5</itemgap>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListViewInfoRow1]</label>
					<font>TextboxFont_18</font>
					<textcolor>9fffffff</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListViewInfoRow2]</label>
					<font>TextboxFont_18</font>
					<textcolor>9fffffff</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
				<control type="label">
					<height min="0" max="44">auto</height>
					<width>180</width>
					<label>$VAR[ListViewInfoRow3]</label>
					<font>TextboxFont_18</font>
					<textcolor>9fffffff</textcolor>
					<shadowcolor>77000000</shadowcolor>
				</control>
			</control>
    </include>

    <include name="ListView_Thumb">
  		<control type="image">
  			<left>735</left>
  			<top>158</top>
  			<width>500</width>
  			<height>256</height>
  			<aspectratio align="right" aligny="top">keep</aspectratio>
  			<texture>$INFO[Listitem.Icon]</texture>
  			<bordertexture border="31">views/other/panel2.png</bordertexture>
  			<bordersize>10</bordersize>
			<visible>![[Container.Content(Studios) | Container.Content(Countries) | Container.Content(Genres) | [String.StartsWith(Container.FolderPath,plugin://plugin) + !String.IsEmpty(ListItem.Plot)]] + !ListItem.IsParentFolder]</visible>
  		</control>
  		<control type="group">
  			<left>979</left>
  			<top>158</top>
			<visible>Container.Content(Genres) + !ListItem.IsParentFolder</visible>
	  		<control type="image">
	  	        <width>256</width>
	  	        <height>256</height>
	  		    <aspectratio align="right" aligny="top">stretch</aspectratio>
	            <texture background="true">views/other/panel2.png</texture>
	  		</control>
	  		<control type="image">
	  			<width>256</width>
	  			<height>256</height>
	  			<aspectratio align="center" aligny="center">scale</aspectratio>
	            <texture background="true" fallback="special://skin/extras/moviesgenres/default.png">$INFO[ListItem.Label,special://skin/extras/moviesgenres/,.jpg]</texture>
	  			<bordersize>10</bordersize>
		        <visible>String.IsEqual(Container.FolderPath,videodb://movies/genres/)</visible>
	  		</control>
	  		<control type="image">
	  			<width>256</width>
	  			<height>256</height>
	  			<aspectratio align="center" aligny="center">scale</aspectratio>
	            <texture background="true" fallback="special://skin/extras/moviesgenres/default.png">$INFO[ListItem.Label,special://skin/extras/tvshowsgenres/,.jpg]</texture>
	  			<bordersize>10</bordersize>
		        <visible>String.IsEqual(Container.FolderPath,videodb://tvshows/genres/)</visible>
	  		</control>
	  		<control type="image">
	  			<width>256</width>
	  			<height>256</height>
	  			<aspectratio align="center" aligny="center">scale</aspectratio>
	            <texture background="true" fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,resource://resource.images.musicgenreicons.text/,.jpg]</texture>
	  			<bordersize>10</bordersize>
		        <visible>String.IsEqual(Container.FolderPath,musicdb://genres/) | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)</visible>
	  		</control>
	  	</control>
		<control type="group">
  			<left>979</left>
  			<top>158</top>
			<visible>Container.Content(Studios) + !ListItem.IsParentFolder</visible>
	  		<control type="image">
	  	        <width>256</width>
	  	        <height>256</height>
	  		    <aspectratio align="right" aligny="top">stretch</aspectratio>
	            <texture background="true">views/other/panel2.png</texture>
	  		</control>
	  		<control type="image">
			    <left>35</left>
  			    <top>30</top>
	  			<width>186</width>
	  			<height>186</height>
	  			<aspectratio align="center" aligny="center">keep</aspectratio>
	            <texture fallback="DefaultStudios.png">$INFO[ListItem.Label,resource://resource.images.studios.coloured/,.png]</texture>
	  			<bordersize>10</bordersize>
		        <visible>String.IsEqual(Container.FolderPath,videodb://movies/studios/) | String.IsEqual(Container.FolderPath,videodb://tvshows/studios/)</visible>
	  		</control>
	  	</control>
		<control type="group">
  			<left>979</left>
  			<top>158</top>
			<visible>Container.Content(Countries) + !ListItem.IsParentFolder</visible>
	  		<control type="image">
	  	        <width>256</width>
	  	        <height>256</height>
	  		    <aspectratio align="right" aligny="top">stretch</aspectratio>
	            <texture background="true">views/other/panel2.png</texture>
	  		</control>
	  		<control type="image">
			    <width>256</width>
	  	        <height>256</height>
	  		    <aspectratio align="right" aligny="top">stretch</aspectratio>
	            <texture fallback="DefaultCountry.png">$INFO[ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</texture>
	  			<bordersize>10</bordersize>
		        <visible>String.IsEqual(Container.FolderPath,videodb://movies/countries/)</visible>
	  		</control>
	  	</control>
  		<control type="group">
  			<left>674</left>
  			<top>158</top>
			  <visible>String.StartsWith(Container.FolderPath,plugin://plugin) + ![ListItem.IsParentFolder | String.IsEmpty(ListItem.Plot)]</visible>
	  		<control type="image">
					<left>0</left>
					<top>0</top>
					<width>560</width>
					<height>310</height>
	  			<aspectratio align="right" aligny="center">stretch</aspectratio>
	  			<texture background="true" border="70">views/other/panel2.png</texture>
	  		</control>
	  		<control type="image">
	  			<left>0</left>
	  			<top>0</top>
					<width>560</width>
					<height>310</height>
	  			<aspectratio align="center" aligny="center">scale</aspectratio>
	  			<texture>$VAR[VarArtFanart]</texture>
	  			<bordersize>10</bordersize>
	  		    </control>
			    <control type="image">
				    <left>0</left>
  			        <top>0</top>
					<width>560</width>
					<height>310</height>
					<aspectratio aligny="center" align="center">stretch</aspectratio>
					<texture>views/gallery/title_overlay.png</texture>
  			        <bordersize>10</bordersize>
	                <visible>!String.IsEmpty(Control.GetLabel(72))</visible>
			    </control>
				<control type="label" id="72">
					<left>17</left>
					<top>270</top>
					<width>530</width>
					<font>FontSize_20</font>
					<textcolor>$VAR[Text.GlobalColor]</textcolor>
					<shadowcolor>77000000</shadowcolor>
					<label>$VAR[GlobalInfo]</label>
				</control>
				<control type="textbox">
					<left>5</left>
					<top>313</top>
					<width>550</width>
					<height>120</height>
					<font>TextboxFont_20</font>
					<textcolor>9fffffff</textcolor>
					<shadowcolor>77000000</shadowcolor>
					<align>justify</align>
					<autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
					<label>$VAR[GlobalPlotDescription]</label>
				</control>
  		</control>
    </include>


		<!-- ====================== -->
		<!-- ==== Banners View ==== -->
		<!-- ====================== -->
    <include name="BannersView_Panel">
			<control type="image">
				<left>11</left>
				<top>11</top>
				<width>719</width>
				<height>231</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true" border="39">views/other/panel.png</texture>
			</control>
    </include>


		<!-- ========================= -->
		<!-- ==== Thumbnails View ==== -->
		<!-- ========================= -->
    <include name="Thumbnails_PanelVars">
				<left>40</left>
				<top>105</top>
				<width>1200</width>
		    <height>501</height>
				<onleft>9111</onleft>
				<onright>605</onright>
				<onup>560</onup>
				<ondown>560</ondown>
        <orientation>vertical</orientation>
				<pagecontrol>605</pagecontrol>
				<preloaditems>6</preloaditems>
				<viewtype label="31085">Thumbs</viewtype>
        <scrolltime tween="Quadratic" easing="out">350</scrolltime>
    </include>
	
	<include name="ThumbnailsDiscArtLayout">
	    <control type="group">
		    <top>22</top>
			<left>-5</left>
			<width>205</width>
			<height>205</height>
		<visible>![Container(561).Column(4) + Container(561).Row(0) | Container(561).Column(4) + Container(561).Row(1)
			     | Container(561).Column(5) + Container(561).Row(0) | Container(561).Column(5) + Container(561).Row(1)
			     | Container(561).Column(6) + Container(561).Row(0) | Container(561).Column(6) + Container(561).Row(1)]
			     + ![Container.Scrolling | Skin.HasSetting(DisableVideoThumbnailsView_DiscArt) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)]
		</visible>
	    <control type="image">
		    <top>-40</top>			
            <width>285</width>
			<height>285</height>	
	        <aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
            <texture background="true">views/Thumbnail/rounded_blue_shadow.png</texture>				
	    	    <animation type="Focus" reversible="false">
				    <effect type="fade" start="0" end="100" time="200" delay="500"/>
	    		    <effect type="slide" end="60,0" center="auto" time="700" delay="100" loop="false" tween="cubic" easing="inout"/>	    		    
	    	    </animation> 	    	
            </control>
	    <control type="image">            
	        <aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
            <texture background="true" fallback="osd/cd.png">$INFO[ListItem.Art(discart)]</texture>				
	    	    <animation type="Focus" reversible="false">
				    <effect type="fade" start="0" end="100" time="200" delay="500"/>
	    		    <effect type="slide" end="85,0" center="auto" time="700" delay="100" loop="false" tween="cubic" easing="inout"/>	    		    
	    	    </animation> 	    	
            </control>
		</control>
		<control type="group">
		    <top>22</top>
			<left>-5</left>
			<width>205</width>
			<height>205</height>
		<visible>[Container(561).Column(4) + Container(561).Row(0) | Container(561).Column(4) + Container(561).Row(1)
			     | Container(561).Column(5) + Container(561).Row(0) | Container(561).Column(5) + Container(561).Row(1)
			     | Container(561).Column(6) + Container(561).Row(0) | Container(561).Column(6) + Container(561).Row(1)]
			     + ![Container.Scrolling | Skin.HasSetting(DisableVideoThumbnailsView_DiscArt) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)]
		</visible>
	    <control type="image">
		    <top>-40</top>			
            <width>285</width>
			<height>285</height>	
	        <aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
            <texture background="true">views/Thumbnail/rounded_blue_shadow.png</texture>				
	    	    <animation type="Focus" reversible="false">
				    <effect type="fade" start="0" end="100" time="200" delay="500"/>
	    		    <effect type="slide" end="-160,0" center="auto" time="700" delay="100" loop="false" tween="cubic" easing="inout"/>	    		    
	    	    </animation> 	    	
            </control>
	    <control type="image">            
	        <aspectratio align="center" aligny="center" scalediffuse="false">stretch</aspectratio>
            <texture background="true" fallback="osd/cd.png">$INFO[ListItem.Art(discart)]</texture>				
	    	    <animation type="Focus" reversible="false">
				    <effect type="fade" start="0" end="100" time="200" delay="500"/>
	    		    <effect type="slide" end="-107,0" center="auto" time="700" delay="100" loop="false" tween="cubic" easing="inout"/>	    		    
	    	    </animation> 	    	
            </control>
		</control>		
	</include>	

    <include name="ThumbnailsLayout">
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture border="30">views/other/panel2.png</texture>
			</control>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<aspectratio align="center" aligny="center">scale</aspectratio>
			  <texture background="true" fallback="thumbs/fallback_square_tp.png">$VAR[ThumbnailsIcon]</texture>
			  <bordersize>ThumbsBordersize7pix</bordersize>
			  <visible>![Container.Content(Genres) + !ListItem.IsParentFolder] + !String.IsEmpty(ListItem.Art(thumb))</visible>
			</control>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
		    <colordiffuse>$PARAM[colordiffuse]</colordiffuse>
				<aspectratio align="center" aligny="center">scale</aspectratio>
			  <texture background="true" fallback="thumbs/fallback_square_tp.png">$VAR[ThumbnailsIcon]</texture>
			  <bordersize>ThumbsBordersize7pix</bordersize>
			  <visible>![Container.Content(Genres) + !ListItem.IsParentFolder] + String.IsEmpty(ListItem.Art(thumb))</visible>
			</control>
      <control type="image">
      	<left>5</left>
      	<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
      	<aspectratio align="center" aligny="center">scale</aspectratio>
        <texture background="true" fallback="special://skin/extras/moviesgenres/default.png">$INFO[ListItem.Label,special://skin/extras/moviesgenres/,.jpg]</texture>
        <bordersize>ThumbsBordersize7pix</bordersize>
	      <visible>String.IsEqual(Container.FolderPath,videodb://movies/genres/) + !ListItem.IsParentFolder</visible>
      </control>
      <control type="image">
      	<left>5</left>
      	<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
      	<aspectratio align="center" aligny="center">scale</aspectratio>
        <texture background="true" fallback="special://skin/extras/moviesgenres/default.png">$INFO[ListItem.Label,special://skin/extras/tvshowsgenres/,.jpg]</texture>
        <bordersize>ThumbsBordersize7pix</bordersize>
	      <visible>String.IsEqual(Container.FolderPath,videodb://tvshows/genres/) + !ListItem.IsParentFolder</visible>
      </control>
      <control type="image">
      	<left>5</left>
      	<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
      	<aspectratio align="center" aligny="center">scale</aspectratio>
        <texture background="true" fallback="special://skin/extras/musicgenres/default.png">$INFO[ListItem.Label,resource://resource.images.musicgenreicons.text/,.jpg]</texture>
        <bordersize>ThumbsBordersize7pix</bordersize>
	      <visible>[String.IsEqual(Container.FolderPath,musicdb://genres/)  | String.IsEqual(Container.FolderPath,videodb://musicvideos/genres/)] + !ListItem.IsParentFolder</visible>
      </control>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
			  <texture background="true">overlays/unwatched/thumbs/UnWatched_Square.png</texture>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<bordersize>ThumbsBordersize7pix</bordersize>
        <visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
			</control>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
			  <texture background="true">$VAR[AddonStatus]</texture>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<bordersize>ThumbsBordersize7pix</bordersize>
			</control>
    </include>

    <include name="ThumbnailsBig_ItemLayout">
	    <include content="ThumbnailsLayout">
	      <param name="width" value="231"/>
	      <param name="height" value="240"/>
	      <param name="colordiffuse" value="ffffffff"/>
	    </include>
    </include>
    
    <include name="ThumbnailsSmall_ItemLayout">
	    <include content="ThumbnailsLayout">
	      <param name="width" value="163"/>
	      <param name="height" value="157"/>
	      <param name="colordiffuse" value="ffffffff"/>
	    </include>
    </include>
    
    <include name="ThumbnailsBig_FocusedLayout">
	    <include content="ThumbnailsLayout">
	      <param name="width" value="231"/>
	      <param name="height" value="240"/>
	      <param name="colordiffuse" value="$VAR[DiffuseColorThumbnailsViewThumbs]"/>
	    </include>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>231</width>
				<height>240</height>
        <colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture border="30">views/other/focus_panel.png</texture>
        <include>ThumbnailsFocusAnimation</include>
			</control>
    </include>
    
    <include name="ThumbnailsSamll_FocusedLayout">
	    <include content="ThumbnailsLayout">
	      <param name="width" value="163"/>
	      <param name="height" value="157"/>
	      <param name="colordiffuse" value="$VAR[DiffuseColorThumbnailsViewThumbs]"/>
	    </include>
			<control type="image">
				<left>5</left>
				<top>5</top>
				<width>163</width>
				<height>157</height>
        <colordiffuse>$VAR[Textures.GlobalColor]</colordiffuse>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture border="30">windows/home/focus_widgets.png</texture>
        <include>ThumbnailsFocusAnimation</include>
			</control>
    </include>

  	<include name="Thumbnails_Scrollbar">
			<control type="scrollbar" id="605">
				<right>30</right>
				<top>100</top>
				<width>6</width>
  		  <height>488</height>
				<texturesliderbackground/>
				<texturesliderbar border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbar>
				<texturesliderbarfocus border="0,14,0,14">views/scrollbar/scrollbar.png</texturesliderbarfocus>
				<textureslidernib/>
				<textureslidernibfocus/>
				<onleft>560</onleft>
				<onright>9444</onright>
				<showonepage>false</showonepage>
				<orientation>vertical</orientation>
			  <animation effect="fade" start="100" end="0" time="250" condition="!Control.HasFocus(605) + !Container.Scrolling">Conditional</animation>
			</control>
  	</include>


		<!-- ==================== -->
		<!-- ==== Tiles View ==== -->
		<!-- ==================== -->
  	<include name="TilesViewLayout">
			<control type="image">
				<left>-5</left>
				<top>5</top>
				<width>400</width>
				<height>230</height>
				<aspectratio aligny="center" align="center">stretch</aspectratio>
			  <texture background="true" border="31">thumbs/thumb_border.png</texture>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>220</height>
				<aspectratio aligny="center" align="center">scale</aspectratio>
			  <texture background="true" fallback="thumbs/fallback_fanart_big_tp.png">$VAR[VarArtFanart]</texture>
				<bordersize>1</bordersize>
				<visible>![Container.Content(TVShows) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)]
							 + ![[Container.Content(TVShows) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
							 + ![Container.Content(Seasons) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)]
							 + ![[Container.Content(Seasons) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))]
							 + ![Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),2)]
							 + ![[Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
	      </visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>220</height>
				<aspectratio aligny="center" align="center">scale</aspectratio>
			  <texture background="true" fallback="thumbs/fallback_fanart_big_tp.png">$VAR[LandscapeVars]</texture>
				<bordersize>1</bordersize>
	      <visible>[[Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)]
	      	     | [Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),2)]
	      </visible>
			</control>
			<control type="image">
				<left>10</left>
				<top>20</top>
				<width>370</width>
				<height>200</height>
				<aspectratio aligny="center" align="center">keep</aspectratio>
			  <texture background="true" fallback="thumbs/fallback_fanart_tp.png">$VAR[ClearlogoVars]</texture>
				<bordersize>1</bordersize>
	      <visible>[[Container.Content(TVShows) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
	      	     | [[Container.Content(Seasons) + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)] + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))]
	      	     | [[Container.Content(Movies) + String.IsEqual(Skin.String(TileViewWideThumbMovies),3)] + !String.IsEmpty(ListItem.Art(clearlogo))]
	      </visible>
			</control>
			<control type="image">
				<top>10</top>
				<width>390</width>
				<height>220</height>
				<aspectratio align="center" aligny="center">stretch</aspectratio>
				<texture background="true">overlays/unwatched/tiles/UnWatched.png</texture>
        <visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
				<bordersize>1</bordersize>
			</control>
			<control type="image">
				<left>0</left>
				<top>260</top>
				<width>390</width>
				<height>220</height>
				<colordiffuse>$PARAM[textcolor]</colordiffuse>
			  <texture background="true">thumbs/fallback_sets.png</texture>
			  <visible>String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
			</control>
			<control type="group">
				<left>10</left>
				<top>230</top>
				<control type="label">
				  <left>$PARAM[text_left]</left>
					<top>10</top>
					<width>375</width>
					<height>20</height>
					<label>$VAR[MusicLabel]</label>
					<font>FontSize_20B</font>
					<textcolor>$PARAM[textcolor]</textcolor>
					<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
					<selectedcolor>$PARAM[selectedcolor]</selectedcolor>
				  <scroll>false</scroll>
			    <visible>!Container.Content(MusicVideos)</visible>
				</control>
				<control type="label">
				  <left>$PARAM[text_left]</left>
					<top>10</top>
					<width>375</width>
					<height>20</height>
					<label>$INFO[ListItem.Title]</label>
					<font>FontSize_20B</font>
					<textcolor>$PARAM[textcolor]</textcolor>
					<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
					<selectedcolor>$PARAM[selectedcolor]</selectedcolor>
				  <scroll>false</scroll>
			    <visible>Container.Content(MusicVideos)</visible>
				</control>
				<control type="label">
				  <left>$PARAM[text_left]</left>
					<width>375</width>
					<height>80</height>
					<label>$VAR[GlobalInfo]</label>
					<font>FontSize_20</font>
					<textcolor>$PARAM[textcolor]</textcolor>
					<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
					<selectedcolor>$PARAM[textcolor]</selectedcolor>
				  <scroll>false</scroll>
				  <visible>!Container.Content(Episodes)</visible>
				</control>
				<control type="label">
				  <left>$PARAM[text_left]</left>
					<width>375</width>
					<height>80</height>
					<label>$INFO[ListItem.TVShowTitle] $INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</label>
					<font>FontSize_20</font>
					<textcolor>$PARAM[textcolor]</textcolor>
					<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
					<selectedcolor>$PARAM[textcolor]</selectedcolor>
				  <scroll>false</scroll>
				  <visible>Container.Content(Episodes)</visible>
				</control>
				<control type="textbox">
				  <left>$PARAM[text_left]</left>
					<top>57</top>
					<width>370</width>
					<height>125</height>
					<font>FontSize_18</font>
					<align>justify</align>
					<textcolor>$PARAM[textcolor]</textcolor>
					<shadowcolor>$PARAM[shadowcolor]</shadowcolor>
					<label>$VAR[GlobalPlotDescription]</label>
				  <autoscroll delay="8000" time="2000" repeat="8000">Skin.HasSetting(AutoScroll)</autoscroll>
				</control>
				<control type="label">
				  <left>$PARAM[text_left]</left>
					<top>195</top>
					<width>370</width>
					<height>22</height>
					<textcolor>$PARAM[textcolor]</textcolor>
	        <shadowcolor>$PARAM[shadowcolor]</shadowcolor>
				  <selectedcolor>$PARAM[textcolor]</selectedcolor>
					<font>FontSize_20</font>
		      <scroll>false</scroll>
					<align>left</align>
					<label>$VAR[BannersListMusicBottomLabel]</label>
		      <visible>Container.Content(Artists) | Container.Content(Albums) | Container.Content(Songs)</visible>
				</control>
				<!-- Small Down Info -->
			  <control type="group">
				  <left>$PARAM[text_left]</left>
					<top>195</top>
		      <visible>![Container.Content(Artists) | Container.Content(Albums) | Container.Content(Songs)]</visible>
					<control type="image">
						<colordiffuse>mediaflags</colordiffuse>
				    <include>SmallDownInfo_Def3DFlags</include>
					</control>
					<control type="image">
						<colordiffuse>mediaflags</colordiffuse>
				    <include>SmallDownInfo_MPAATVFlags</include>
					</control>
					<control type="label">
						<left>45</left>
						<top>0</top>
						<width>335</width>
						<textcolor>$PARAM[textcolor]</textcolor>
		        <shadowcolor>$PARAM[shadowcolor]</shadowcolor>
					  <selectedcolor>$PARAM[textcolor]</selectedcolor>
				    <include>SmallDownInfo_SmallGlobalInfo</include>
		        <visible>!String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
	          <animation effect="slide" start="0,0" end="-45,0" time="0" tween="sine" easing="inout" condition="String.IsEmpty(ListItem.VideoResolution)">Conditional</animation>
	          <animation effect="slide" start="0,0" end="65,0" time="0" tween="sine" easing="inout" condition="[Container.Content(TVShows) | Container.Content(Seasons)] + !String.IsEmpty(ListItem.mpaa)">Conditional</animation>
					</control>
			  </control>
			</control>
  	</include>


		<!-- =============== -->
		<!-- Small Down Info -->
		<!-- =============== -->
    <include name="SmallDownInfo_Def3DFlags">
			<width>40</width>
		    <height>22</height>
		    <colordiffuse>mediaflags</colordiffuse>
			<aspectratio align="center">keep</aspectratio>
			<texture background="true">$VAR[ViewsDef3DFlags]</texture>
			<visible>[Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos)] + !String.IsEmpty(ListItem.VideoResolution)</visible>
    </include>
    <include name="SmallDownInfo_Sets">
			<width>38</width>
			<height>24</height>
      <colordiffuse>9fffffff</colordiffuse>
	    <aspectratio>keep</aspectratio>
      <texture background="true">flags/sets/sets.png</texture>
			<visible>String.StartsWith(ListItem.Path,videodb://movies/sets/)</visible>
    </include>
    <include name="SmallDownInfo_MPAATVFlags">			
  		    <width>64</width>
		    <height>23</height>
			<colordiffuse>mediaflags</colordiffuse>
			<aspectratio align="center">keep</aspectratio>
			<texture background="true" fallback="flags/mpaa/tv/tv-na.png">$INFO[ListItem.mpaa,flags/mpaa/tv/,.png]</texture>
			<visible>[Container.Content(TVShows) | Container.Content(Seasons)] + !String.IsEmpty(ListItem.mpaa)</visible>
    </include>
    <include name="SmallDownInfo_SmallGlobalInfo">
			<height>23</height>
			<textcolor>9fffffff</textcolor>
      <shadowcolor>77000000</shadowcolor>
      <selectedcolor>9fffffff</selectedcolor>
			<font>FontSize_20</font>
      <scroll>false</scroll>
			<align>left</align>
			<aligny>center</aligny>
      <label>$VAR[SmallGlobalInfo]</label>
    </include>
    <include name="SmallDownInfo_OverlayUnWatched">
			<width>20</width>
			<height>24</height>
			<colordiffuse>9fffffff</colordiffuse>
			<aspectratio>keep</aspectratio>
			<texture background="true">overlays/unwatched/list/UnWatched.png</texture>
			<visible>String.IsEqual(ListItem.Overlay,OverlayUnWatched.png)</visible>
    </include>


		<!-- ========================= -->
		<!-- ==== Options TopMenu ==== -->
		<!-- ========================= -->
    <include name="OptionsTopMenuVars">
			<left>0</left>
			<top>-12</top>
			<width>405</width>
			<height max="620">auto</height>
			<itemgap>0</itemgap>
			<onleft>50</onleft>
			<onright>50</onright>
			<onup>9111</onup>
			<ondown>9111</ondown>
			<onback>50</onback>
	    <visible>!Skin.HasSetting(EnableKioskMode)</visible>
      <control type="image" id="999">
				<width>405</width>
				<height>75</height>
				<texture>dialogs/menus/topmenus_options.png</texture>
        <aspectratio>stretch</aspectratio>
      </control>
    </include>

    <include name="OptionsTopMenuHeader">
			<control type="label">
              <left>75</left>
			  <label>$LOCALIZE[33063] $LOCALIZE[33061]</label>
			  <include>TopBigLabel</include>
			</control>
    </include>

    <include name="OptionsTopMenuEnd">
      <control type="image" id="998">
  			<width>405</width>
  			<height>22</height>
  			<texture>dialogs/menus/bottom.png</texture>
            <aspectratio>stretch</aspectratio>
      </control>
    </include>


		<!-- ============================== -->
		<!-- ==== Jump To First Letter ==== -->
		<!-- ============================== -->
    <include name="JumpToFirstSortLetter">
			<control type="panel" id="9444">
        <left>1242</left>
  			<top>4</top>
  			<width>35</width>
  			<height>720</height>
  			<onleft>50</onleft>
  			<onright>9000</onright>
  			<onup>9444</onup>
  			<ondown>9444</ondown>
		    <orientation>vertical</orientation>
        <animation type="WindowOpen" reversible="false">
          <effect type="slide" start="100,0" end="0,0" time="300" delay="0" tween="sine" easing="out"/>
        </animation>
    		<animation type="WindowClose" reversible="false">
          <effect type="slide" start="0,0" end="100,0" time="300" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="Visible" reversible="false">
          <effect type="slide" start="100,0" end="0,0" time="300" delay="0" tween="sine" easing="out"/>
        </animation>
    		<animation type="Hidden" reversible="false">
          <effect type="slide" start="0,0" end="100,0" time="300" delay="0" tween="sine" easing="in"/>
        </animation>
		    <visible allowhiddenfocus="true">Control.HasFocus(9444) + ![Window.IsActive(ShutdownMenu) | Window.IsActive(Favourites) | Window.IsActive(PlayerControls)]</visible>
		    <itemlayout height="26.5" width="32">
		      <control type="image" id="998">
		  			<width>34</width>
		  			<height>22</height>
	          <colordiffuse>77ffffff</colordiffuse>
		  			<texture border="2">views/other/sortletter.png</texture>
	          <animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
		      </control>
	        <control type="label">
		  			<width>34</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>77ffffff</textcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
	        </control>
	        <control type="label">
		  			<width>34</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>$VAR[Text.GlobalColor]</textcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
	        </control>
		    </itemlayout>
		    <focusedlayout height="26.5" width="32">
		      <control type="image" id="998">
		  			<width>34</width>
		  			<height>22</height>
	          <colordiffuse>$VAR[Text.GlobalColor]</colordiffuse>
		  			<texture border="2">views/other/sortletter.png</texture>
		      </control>
	        <control type="label">
		  			<width>34</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>77ffffff</textcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <visible>!String.IsEmpty(ListItem.Property(NotAvailable))</visible>
	          <animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
	        </control>
	        <control type="label">
		  			<width>34</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>$VAR[Text.GlobalColor]</textcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <visible>String.IsEmpty(ListItem.Property(NotAvailable))</visible>
	        </control>
		    </focusedlayout>
		    <content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
			</control>
			<control type="panel" id="9555">
        <left>6</left>
        <top>692</top>
        <height>25</height>
        <width>1280</width>
        <onleft>9555</onleft>
        <onright>9555</onright>
        <onup>50</onup>
        <ondown>9000</ondown>
        <orientation>horizontal</orientation>
        <animation type="WindowOpen" reversible="false">
          <effect type="slide" start="0,100" end="0,0" time="300" delay="0" tween="sine" easing="out"/>
        </animation>
        <animation type="WindowClose" reversible="false">
          <effect type="slide" start="0,0" end="0,100" time="300" delay="0" tween="sine" easing="in"/>
        </animation>
        <animation type="Visible" reversible="false">
          <effect type="slide" start="0,100" end="0,0" time="300" delay="0" tween="sine" easing="out"/>
        </animation>
        <animation type="Hidden" reversible="false">
          <effect type="slide" start="0,0" end="0,100" time="300" delay="0" tween="sine" easing="in"/>
        </animation>
		    <visible allowhiddenfocus="true">Control.HasFocus(9555) + ![Window.IsActive(ShutdownMenu) | Window.IsActive(Favourites) | Window.IsActive(PlayerControls)]</visible>
		    <itemlayout height="26.5" width="47.3">
		      <control type="image" id="998">
		  			<width>38</width>
		  			<height>22</height>
	          <colordiffuse>77ffffff</colordiffuse>
		  			<texture border="2">views/other/sortletter.png</texture>
	          <animation effect="fade" end="40" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
		      </control>
	        <control type="label">
		  			<width>38</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>77ffffff</textcolor>
						<shadowcolor>55000000</shadowcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <animation effect="fade" end="50" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
	        </control>
	        <control type="label">
		  			<width>38</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>$VAR[Text.GlobalColor]</textcolor>
						<shadowcolor>55000000</shadowcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter)</visible>
	        </control>
		    </itemlayout>
		    <focusedlayout height="26.5" width="47.3">
		      <control type="image" id="998">
		  			<width>38</width>
		  			<height>22</height>
	          <colordiffuse>$VAR[Text.GlobalColor]</colordiffuse>
		  			<texture border="2">views/other/sortletter.png</texture>
		      </control>
	        <control type="label">
		  			<width>38</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>77ffffff</textcolor>
						<shadowcolor>55000000</shadowcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <visible>!String.IsEmpty(ListItem.Property(NotAvailable))</visible>
	          <animation effect="fade" end="50" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
	        </control>
	        <control type="label">
		  			<width>38</width>
		  			<height>24</height>
			      <align>center</align>
			      <aligny>center</aligny>
						<font>FontSize_14B</font>
	          <textcolor>$VAR[Text.GlobalColor]</textcolor>
						<shadowcolor>55000000</shadowcolor>
	          <label>$INFO[ListItem.Label]</label>
	          <visible>String.IsEmpty(ListItem.Property(NotAvailable))</visible>
	        </control>
		    </focusedlayout>
		    <content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
			</control>
    </include>


		<!-- =================== -->
  	<!-- ==== Variables ==== -->
		<!-- =================== -->
    <variable name="ListViewInfoRow1">
      <value condition="[Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Director)">[B]$LOCALIZE[20339][/B][CR]$INFO[ListItem.Director]</value>
      <value condition="[Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Director)">[B]$LOCALIZE[20339][/B][CR]$LOCALIZE[195]</value>
      <value condition="[Container.Content(TVShows) | Container.Content(Seasons) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Genre)">[B]$LOCALIZE[515][/B][CR]$INFO[ListItem.Genre]</value>
      <value condition="[Container.Content(TVShows) | Container.Content(Seasons) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Genre)">[B]$LOCALIZE[515][/B][CR]$LOCALIZE[195]</value>
      <value condition="[Container.Content(Addons) | String.StartsWith(Container.FolderPath,plugin)] + !String.IsEmpty(ListItem.AddonCreator)">[B]$LOCALIZE[24000] $LOCALIZE[31041][/B][CR]$INFO[ListItem.AddonCreator]</value>
      <value condition="[Container.Content(Addons) | String.StartsWith(Container.FolderPath,plugin)] + String.IsEmpty(ListItem.AddonCreator)">[B]$LOCALIZE[24000] $LOCALIZE[31041][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Formed))">[B]$LOCALIZE[557] $LOCALIZE[21894][/B][CR]$INFO[ListItem.Property(Artist_Formed)]</value>
      <value condition="Container.Content(Artists) + String.IsEmpty(ListItem.Property(Artist_Formed))">[B]$LOCALIZE[557] $LOCALIZE[21894][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Albums) + !String.IsEmpty(ListItem.Property(Album_Type))">[B]$LOCALIZE[558] $LOCALIZE[467][/B][CR]$INFO[ListItem.Property(Album_Type)]</value>
      <value condition="Container.Content(Albums) + String.IsEmpty(ListItem.Property(Album_Type))">[B]$LOCALIZE[558] $LOCALIZE[467][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.Genre)">[B]$LOCALIZE[515][/B][CR]$INFO[ListItem.Genre]</value>
      <value condition="Container.Content(Songs) + String.IsEmpty(ListItem.Genre)">[B]$LOCALIZE[515][/B][CR]$LOCALIZE[195]</value>
  	</variable>

    <variable name="ListViewInfoRow2">
      <value condition="[Container.Content(Movies) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Writer)">[B]$LOCALIZE[20417][/B][CR]$INFO[ListItem.Writer]</value>
      <value condition="[Container.Content(Movies) | Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Writer)">[B]$LOCALIZE[20417][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(MusicVideos) + !String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$INFO[ListItem.Studio]</value>
      <value condition="Container.Content(MusicVideos) + String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$LOCALIZE[195]</value>
      <value condition="[Container.Content(TVShows) | Container.Content(Seasons) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Premiered)">[B]$LOCALIZE[31004][/B][CR]$INFO[ListItem.Premiered]</value>
      <value condition="[Container.Content(TVShows) | Container.Content(Seasons) | Window.IsVisible(VideoPlaylist)] + String.IsEmpty(ListItem.Premiered)">[B]$LOCALIZE[31004][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Addons) + !String.IsEmpty(ListItem.AddonType)">[B]$LOCALIZE[24000] $LOCALIZE[467][/B][CR]$INFO[ListItem.AddonType]</value>
      <value condition="Container.Content(Addons) + String.IsEmpty(ListItem.AddonType)">[B]$LOCALIZE[24000] $LOCALIZE[467][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_YearsActive))">[B]$LOCALIZE[557] $LOCALIZE[21898][/B][CR]$INFO[ListItem.Property(Artist_YearsActive)]</value>
      <value condition="Container.Content(Artists) + String.IsEmpty(ListItem.Property(Artist_YearsActive))">[B]$LOCALIZE[557] $LOCALIZE[21898][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Albums) + !String.IsEmpty(ListItem.Property(Album_Mood))">[B]$LOCALIZE[558] $LOCALIZE[175][/B][CR]$INFO[ListItem.Property(Album_Mood)]</value>
      <value condition="Container.Content(Albums) + String.IsEmpty(ListItem.Property(Album_Mood))">[B]$LOCALIZE[558] $LOCALIZE[175][/B][CR]$LOCALIZE[195]</value>
  		<value condition="[Container.Content(Songs) + !String.IsEmpty(ListItem.TrackNumber)] + !Integer.IsGreater(ListItem.TrackNumber,9)">[B]$LOCALIZE[31005][/B][CR]$INFO[ListItem.TrackNumber,#0]</value>
  		<value condition="[Container.Content(Songs) + !String.IsEmpty(ListItem.TrackNumber)] + Integer.IsGreater(ListItem.TrackNumber,9)">[B]$LOCALIZE[31005][/B][CR]$INFO[ListItem.TrackNumber,#]</value>
      <value condition="Container.Content(Songs) + String.IsEmpty(ListItem.TrackNumber)">[B]$LOCALIZE[31005][/B][CR]$LOCALIZE[195]</value>
  	</variable>

    <variable name="ListViewInfoRow3">
      <value condition="[Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos)] + !String.IsEmpty(ListItem.Duration)">[B]$LOCALIZE[2050][/B][CR]$VAR[ListItemDuration]</value>
      <value condition="[Container.Content(Movies) | Container.Content(Episodes) | Container.Content(MusicVideos)] + String.IsEmpty(ListItem.Duration)">[B]$LOCALIZE[2050][/B][CR]$LOCALIZE[195]</value>
      <value condition="[Container.Content(TVShows) | Container.Content(Seasons)] + !String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$INFO[ListItem.Studio]</value>
      <value condition="[Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEmpty(ListItem.Studio)">[B]$LOCALIZE[572][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Addons) + !String.IsEmpty(ListItem.Property(Addon.ID))">[B]$LOCALIZE[24000] ID[/B][CR]$INFO[ListItem.Property(Addon.ID)]</value>
      <value condition="Container.Content(Addons) + String.IsEmpty(ListItem.Property(Addon.ID))">[B]$LOCALIZE[24000] ID[/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Instrument))">[B]$LOCALIZE[557] $LOCALIZE[21892][/B][CR]$INFO[ListItem.Property(Artist_Instrument)]</value>
      <value condition="Container.Content(Artists) + String.IsEmpty(ListItem.Property(Artist_Instrument))">[B]$LOCALIZE[557] $LOCALIZE[21892][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Albums) + !String.IsEmpty(ListItem.Property(Album_Label))">[B]$LOCALIZE[558] $LOCALIZE[21899][/B][CR]$INFO[ListItem.Property(Album_Label)]</value>
      <value condition="Container.Content(Albums) + String.IsEmpty(ListItem.Property(Album_Label))">[B]$LOCALIZE[558] $LOCALIZE[21899][/B][CR]$LOCALIZE[195]</value>
      <value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.FileExtension)">[B]$LOCALIZE[561] $LOCALIZE[467][/B][CR]$INFO[ListItem.FileExtension]</value>
      <value condition="Container.Content(Songs) + String.IsEmpty(ListItem.FileExtension)">[B]$LOCALIZE[561] $LOCALIZE[467][/B][CR]$LOCALIZE[195]</value>
  	</variable>

  	<variable name="DiffuseColorThumbnailsViewThumbs">
      <value condition="[String.StartsWith(Container.FolderPath,addons://sources) | String.StartsWith(Container.FolderPath,plugin://plugin) | Container.Content(Files) | [Container.HasFolders + !String.IsEmpty(ListItem.FolderName)] | [Container.HasFiles + !String.IsEmpty(ListItem.FolderName)] | Container.Content(Artists) | Container.Content(Albums) | Container.Content(Songs) | Container.Content(Actors) | Container.Content(Genres) | Window.IsVisible(addonbrowser)] + !String.IsEmpty(ListItem.Thumb)">FFFFFFFF</value>
  		<value>$VAR[Textures.GlobalColor]</value>
  	</variable> 	

  	<variable name="CurrentPlayList">
  		<value condition="Window.IsActive(Videos) + !String.IsEqual(Playlist.Length(video),0)">ActivateWindow(videoplaylist)</value>
  		<value condition="Window.IsActive(Music) + !String.IsEqual(Playlist.Length(music),0)">ActivateWindow(musicplaylist)</value>
  	</variable>

    <variable name="ContentInfoVideos">
      <value condition="![[Container.Content(Movies) | Container.Content(Sets) | Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes) | Container.Content(MusicVideos)] + !String.StartsWith(Container.FolderPath,plugin://plugin.video)]">$LOCALIZE[3]</value>
      <value condition="[Container.Content(Movies) | Container.Content(Sets)]  + !String.StartsWith(Container.FolderPath,plugin://plugin.video)">$LOCALIZE[20342]</value>
      <value condition="[Container.Content(TVShows) | Container.Content(Seasons) | Container.Content(Episodes)] + !String.StartsWith(Container.FolderPath,plugin://plugin.video)">$LOCALIZE[31002]</value>
      <value condition="Container.Content(MusicVideos)">$LOCALIZE[20389]</value>
    </variable>

  	<variable name="ListItemDuration">
  		<value condition="Control.HasFocus(25) + !String.Contains(Container(25).ListItem.Duration,Mins)">$INFO[Container(25).ListItem.Duration,, $LOCALIZE[12391]]</value>
  		<value condition="Control.HasFocus(25) + String.Contains(Container(25).ListItem.Duration,Mins)">$INFO[Container(25).ListItem.Duration]</value>
  		<value condition="!String.Contains(ListItem.Duration,Mins)">$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
  		<value condition="String.Contains(ListItem.Duration,Mins)">$INFO[ListItem.Duration]</value>
  	</variable>

  	<variable name="ListItemDurationGlobalSearch">
  		<value condition="!String.Contains(Container(100).ListItem.Property(Duration),Mins)">$INFO[Container(100).ListItem.Property(Duration),, $LOCALIZE[12391]]</value>
  		<value condition="String.Contains(Container(100).ListItem.Property(Duration),Mins)">$INFO[Container(100).ListItem.Property(Duration)]</value>
  	</variable>

    <variable name="ListItemLabel">
      <value condition="[Container.Content(MusicVideos) + !String.IsEqual(Container.FolderPath,videodb://recentlyaddedmusicvideos/)] + ListItem.IsPlaying">[COLOR=$VAR[Text.GlobalColor]]$INFO[ListItem.Label]$INFO[ListItem.Artist, - ][/COLOR]</value>
      <value condition="[Container.Content(MusicVideos) + !String.IsEqual(Container.FolderPath,videodb://recentlyaddedmusicvideos/)]">$INFO[ListItem.Label]$INFO[ListItem.Artist, - ]</value>
      <value condition="ListItem.IsPlaying">[COLOR=$VAR[Text.GlobalColor]]$INFO[ListItem.Label][/COLOR]</value>
      <value>$INFO[ListItem.Label]</value>
    </variable>

    <variable name="ListItemTitle">
      <value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
      <value>$INFO[ListItem.Label]</value>
    </variable>
  
  	<variable name="ListItemLabel2">
      <value condition="!String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
  		<value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value>
  		<value>$INFO[ListItem.AddonVersion]</value>
  	</variable>	

  	<variable name="FirstMusicLabel">
  		<value condition="Container.Content(Songs) + !Integer.IsGreater(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,#0]</value>
  		<value condition="Container.Content(Songs) + Integer.IsGreater(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,#]</value>
  	  <value condition="!Container.Content(Songs) + !String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year]</value>
  	</variable>	

  	<variable name="MusicLabel">
  		<value condition="[Container.Content(Songs) + Control.IsVisible(50)] + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]$INFO[ListItem.Artist, - ]</value>
  		<value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.TrackNumber,,. ]$INFO[ListItem.Title]</value>
  		<value condition="Container.Content(MusicVideos) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]$INFO[ListItem.Artist, - ]</value>
  		<value>$INFO[ListItem.Label]</value>
  	</variable>

  	<variable name="MusicLabel2">
  		<value condition="Container.Content(Artists) + !String.IsEmpty(ListItem.Property(Artist_Genre))">$INFO[ListItem.Property(Artist_Genre)]</value>
      <value condition="[Container.Content(Songs) + Control.IsVisible(50)] + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration]</value>
  		<value condition="Container.Content(Songs) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Album]$INFO[ListItem.Artist, - ]</value>
  		<value condition="Container.Content(MusicVideos) + !String.IsEmpty(ListItem.Artist)">$INFO[ListItem.Artist]</value>
  		<value condition="!String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
  		<value>$INFO[ListItem.AddonVersion]</value>
  	</variable>
  
  	<variable name="BannersListMusicBottomLabel">
  		<value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_YearsActive),$LOCALIZE[21898]  ]</value>
  		<value condition="Container.Content(Albums)">$INFO[ListItem.Year]$INFO[ListItem.Property(Album_label), • ]</value>
  		<value condition="Container.Content(Songs) + !Integer.IsGreater(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,$LOCALIZE[554] #0,]$INFO[ListItem.Duration,  •  , $LOCALIZE[12391]]</value>
  		<value condition="Container.Content(Songs) + Integer.IsGreater(ListItem.TrackNumber,9)">$INFO[ListItem.TrackNumber,$LOCALIZE[554] #,]$INFO[ListItem.Duration,  •  , $LOCALIZE[12391]]</value>
  		<value condition="Container.Content(MusicVideos) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Year]$INFO[ListItem.Rating, • ,]$INFO[ListItem.Duration, • , $LOCALIZE[12391]]</value>
  	</variable>
  
  	<variable name="FanartThumbsOptionsLabels">
  		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),1)">$LOCALIZE[20445]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),2)">$LOCALIZE[31218]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)">$LOCALIZE[31219]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),1)">$LOCALIZE[20445]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),2)">$LOCALIZE[31218]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)">$LOCALIZE[31219]</value>
  		<value condition="Control.IsVisible(52) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(GalleryViewWideThumbTVShows),1)">$LOCALIZE[20445]</value>
  		<value condition="Control.IsVisible(52) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(GalleryViewWideThumbTVShows),2)">$LOCALIZE[31218]</value>
  		<value condition="Control.IsVisible(52) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(GalleryViewWideThumbTVShows),3)">$LOCALIZE[31219]</value>
  		<value condition="Control.IsVisible(52) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(GalleryViewWideThumbMovies),1)">$LOCALIZE[20445]</value>
  		<value condition="Control.IsVisible(52) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(GalleryViewWideThumbMovies),2)">$LOCALIZE[31218]</value>
  		<value condition="Control.IsVisible(52) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(GalleryViewWideThumbMovies),3)">$LOCALIZE[31219]</value>
  		<value condition="Control.IsVisible(562) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),1)">$LOCALIZE[20445]</value>
  		<value condition="Control.IsVisible(562) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),2)">$LOCALIZE[31218]</value>
  		<value condition="Control.IsVisible(562) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(TileViewWideThumbTVShows),3)">$LOCALIZE[31219]</value>
  		<value condition="Control.IsVisible(562) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(TileViewWideThumbMovies),1)">$LOCALIZE[20445]</value>
  		<value condition="Control.IsVisible(562) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(TileViewWideThumbMovies),2)">$LOCALIZE[31218]</value>
  		<value condition="Control.IsVisible(562) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(TileViewWideThumbMovies),3)">$LOCALIZE[31219]</value>
  	</variable>

  	<variable name="BelloViewThumbsOptionsLabels">
  		<value condition="Control.IsVisible(661) + [Container.Content(Files) | Container.Content(Videos)] + String.IsEqual(Skin.String(BelloViewThumbs),1)">Square</value>
  		<value condition="Control.IsVisible(661) + [Container.Content(Files) | Container.Content(Videos)] + String.IsEqual(Skin.String(BelloViewThumbs),2)">Poster</value>
  		<value condition="Control.IsVisible(661) + [Container.Content(Files) | Container.Content(Videos)] + String.IsEqual(Skin.String(BelloViewThumbs),3)">Landscape</value>
  	</variable>

  	<variable name="GlobalInfo">
  		<value condition="String.StartsWith(ListItem.Path,videodb://movies/sets/) + ListItem.IsFolder + !String.IsEmpty(ListItem.Title)">$LOCALIZE[20457]</value>
  		<value condition="Container.Content(Movies) + !String.IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Property(ReleaseDate),$LOCALIZE[31004]: ]</value>
      <value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons) | Window.IsVisible(VideoPlaylist)] + Integer.IsGreater(ListItem.Property(unWatchedEpisodes),0)">$INFO[ListItem.MPAA,$LOCALIZE[20074]: ]</value>
      <value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons) | Window.IsVisible(VideoPlaylist)] + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Property(UnWatchedEpisodes),, $LOCALIZE[16101] $LOCALIZE[20360]]</value>
  		<value condition="Container.Content(Episodes) | Window.IsVisible(VideoPlaylist) + ![String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]">$INFO[ListItem.Season,$LOCALIZE[20373] ,  •  ]$INFO[ListItem.Episode,$LOCALIZE[20359] ,  •  ]$INFO[ListItem.Premiered,$LOCALIZE[31003] ]</value>
  		<value condition="Container.Content(Episodes) + [String.IsEmpty(ListItem.Season) + String.IsEmpty(ListItem.Episode)]">$INFO[ListItem.Premiered]</value>
  		<value condition="[Container.Content(Movies) | Container.Content(TVShows) | Container.Content(Seasons) | Window.IsVisible(VideoPlaylist) | [Container.Content(MusicVideos) + Control.IsVisible(50)]]">$INFO[ListItem.Genre]</value>
  		<value condition="Container.Content(MusicVideos)">$INFO[ListItem.Artist]</value>
  		<value condition="Container.Content(Files) + !String.Contains(Container.FolderPath,plugin://)">$INFO[ListItem.Date]$INFO[ListItem.Size, • ]$INFO[ListItem.Duration, • ]</value>
  		<value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Style)]</value>
  		<value condition="Container.Content(Albums) + Control.IsVisible(50)">$INFO[ListItem.Property(Album_Genre)]</value>
  		<value condition="Container.Content(Albums) + !Control.IsVisible(50)">$INFO[ListItem.Artist]</value>
  		<value condition="Container.Content(Songs)">$INFO[ListItem.Album]$INFO[ListItem.Artist, - ]</value>
  		<value condition="Window.IsVisible(Pictures)">$INFO[ListItem.PictureDateTime,, • ]$INFO[ListItem.PictureResolution]$INFO[ListItem.PictureCamModel, • ]</value>
  		<value condition="[Window.IsVisible(AddonBrowser) | Window.IsVisible(Programs) | Container.Content(Addons)] + !String.IsEmpty(ListItem.AddonSummary)">$INFO[ListItem.AddonSummary]</value>
  	</variable>

  	<variable name="GlobalPlotDescription">
  		<value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Description)]</value>
  		<value condition="Container.Content(Albums)">$INFO[ListItem.Property(Album_Description)]</value>
  		<value condition="Container.Content(Songs)">$INFO[ListItem.Comment]</value>
  		<value condition="Container.Content(Addons)">$INFO[ListItem.AddonDescription]</value>
      <value condition="String.StartsWith(ListItem.Path,videodb://movies/sets/)">$INFO[Window(home).Property(SkinHelper.ListItem.ExtendedPlots)]</value>
  		<value>$INFO[ListItem.Tagline,[B],[/B][CR]][CR]$INFO[ListItem.Plot]</value> <!-- added Tagline -->
  	</variable>

  	<variable name="SmallGlobalInfo">
  		<value condition="String.StartsWith(ListItem.Path,videodb://movies/sets/) + ListItem.IsFolder + !String.IsEmpty(ListItem.Title)">$LOCALIZE[20457]</value>
  		<value condition="Container.Content(Movies) + String.IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Year,, • ,]$INFO[ListItem.Rating,, • ,]$VAR[ListItemDuration]</value>
  		<value condition="Container.Content(Movies) + !String.IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Property(ReleaseDate),$LOCALIZE[31004]: ]</value>
  		<value condition="Container.Content(TVShows) | Container.Content(Seasons) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Year]$INFO[ListItem.Rating, • ,]$INFO[ListItem.Property(UnWatchedEpisodes), • , $LOCALIZE[16101]]</value>
  		<value condition="Container.Content(Episodes)">$INFO[ListItem.Premiered,, • ,$LOCALIZE[31003] ]$INFO[ListItem.Rating]$VAR[ListItemDuration, • ,]</value>
  		<value condition="Container.Content(MusicVideos) + !String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Year, • ,]$INFO[ListItem.Rating,, • ,]$VAR[ListItemDuration]</value>
  		<value condition="Container.Content(Artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
  		<value condition="Container.Content(Albums)">$INFO[ListItem.Property(Album_Artist)]</value>
  	</variable>

  	<variable name="NetFlixSubLabelInfo">
  		<value condition="String.StartsWith(ListItem.Path,videodb://movies/sets/) + ListItem.IsFolder + !String.IsEmpty(ListItem.Title)">$LOCALIZE[20457]</value>
  		<value condition="[Container.Content(Movies) + String.StartsWith(Container.FolderPath,plugin://plugin.video)] + !String.IsEmpty(ListItem.Property(ReleaseDate))">$INFO[ListItem.Property(ReleaseDate),$LOCALIZE[31004]: ]</value>
  		<value condition="Container.Content(Episodes)">$INFO[ListItem.Premiered]</value>
  		<value>$INFO[ListItem.Year]</value>
  	</variable>

  	<variable name="NetFlixSeasonsLabel">
  		<value condition="Container.Content(TVShows) + Integer.IsGreater(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[33054]]</value>
  		<value condition="Container.Content(TVShows) + !Integer.IsGreater(ListItem.Property(TotalSeasons),1)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[20373]]</value>
  	</variable>

  	<variable name="AddonsLabel2">
  		<value condition="String.IsEqual(Container.FolderPath,addons://sources/video) + !String.IsEmpty(ListItem.AddonBroken)">[COLOR=red]$LOCALIZE[24098][/COLOR]</value>
  		<value condition="!String.IsEqual(Container.FolderPath,addons://sources/video) + !String.IsEmpty(ListItem.AddonBroken)">[COLOR=red]$INFO[ListItem.Label2][/COLOR]</value>
  		<value condition="!String.IsEqual(Container.FolderPath,addons://sources/video) + String.IsEmpty(ListItem.Label2)">$INFO[ListItem.AddonVersion]</value>
  		<value condition="Window.IsActive(Pictures) + Control.IsVisible(560)  + !String.IsEmpty(ListItem.PictureResolution)">$INFO[ListItem.PictureDateTime,, • ]$INFO[ListItem.PictureResolution]$INFO[ListItem.PictureCamModel, • ]</value>
  		<value condition="!String.Contains(Container.FolderPath,addons://enabled/) + !String.IsEmpty(ListItem.Label2)">$INFO[ListItem.Label2]</value>
  		<value>$INFO[ListItem.AddonVersion]</value>
  	</variable>

    <variable name="AddonStatus">
      <value condition="!String.IsEmpty(ListItem.AddonBroken)">overlays/addons_status/status_broken.png</value>
      <value condition="ListItem.Property(Addon.HasUpdate)">overlays/addons_status/status_update.png</value>
      <value condition="ListItem.Property(Addon.IsEnabled)">overlays/addons_status/status_enabled.png</value>
    </variable>

  	<variable name="VarArtPoster">
  		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
  		<value condition="Container.Content(Episodes) | Window.IsVisible(VideoPlaylist)">$INFO[ListItem.Art(tvshow.poster)]</value>
  		<value condition="Container.Content(Seasons) + !String.IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
  		<value condition="Container.Content(Seasons) + String.IsEmpty(ListItem.Art(season.poster)) + !String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
  		<value condition="[String.IsEmpty(ListItem.Art(poster)) | String.IsEmpty(ListItem.Art(season.poster)) | String.IsEmpty(ListItem.Art(tvshow.poster))] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
      <value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_poster_big_tp.png]</value>
  	</variable>

  	<variable name="VarArtFanart">
  		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),2)">$VAR[LandscapeVars]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(TVShows) | Container.Content(Seasons)] + String.IsEqual(Skin.String(ListViewWideThumbTVShows),3)">$VAR[ClearlogoVars]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),2)">$VAR[LandscapeVars]</value>
  		<value condition="Control.IsVisible(50) + [Container.Content(Movies) | Container.Content(Sets)] + String.IsEqual(Skin.String(ListViewWideThumbMovies),3)">$VAR[ClearlogoVars]</value>
  		<value condition="[Container.Content(Episodes) | Container.Content(MusicVideos)] + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
  		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
  		<value condition="!String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
  		<value condition="[String.StartsWith(Container.FolderPath,plugin://plugin) + !String.IsEmpty(ListItem.Icon)]">$INFO[ListItem.Icon]</value>
  		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_tp.png]</value>
  	</variable>

  	<variable name="VarArtBanner">
  		<value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
  		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
      <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
      <value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_banner_tp.png]</value>
  	</variable>

  	<variable name="VarArtThumb">
      <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
      <value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
  	</variable>
  
  	<variable name="VarArtThumbSquare">
      <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
      <value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_square_tp.png]</value>
  	</variable>

  	<variable name="VideoWallThumb">
  		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
  		<value condition="!String.IsEmpty(ListItem.Art(clearart))">$INFO[ListItem.Art(clearart)]</value>
      <value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
  	</variable>
  
    <variable name="ThumbnailsIcon">
      <value condition="!String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
      <value>$INFO[ListItem.Icon]</value>
    </variable>

  	<variable name="NetFlixLandscapeThumb">
  		<value condition="Container.Content(TVShows) + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
  		<value condition="Container.Content(Seasons) + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
      <value condition="Container.Content(Episodes) + !String.IsEmpty(ListItem.Art(thumb))">$INFO[ListItem.Art(thumb)]</value>
  		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
      <value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_episode_tp.png]</value>
  	</variable>
  
  	<variable name="LandscapeVars">
  		<value condition="[Container.Content(TVShows) | Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
  		<value condition="Container.Content(Seasons) | Container.Content(Episodes) + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
  		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
  		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_tp.png]</value>
  	</variable>

  	<variable name="ClearlogoVars">
  		<value condition="[Container.Content(TVShows) | Container.Content(Movies) | Container.Content(Sets)] + !String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
  		<value condition="Container.Content(Seasons) | Container.Content(Episodes) + !String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
  		<value>$INFO[ListItem.ActualIcon,thumbs/,/folderback_fanart_tp.png]</value>
  	</variable>

		<variable name="VideoViewsGenresThumbs">
	    <value condition="String.IsEqual(Container.FolderPath,videodb://movies/genres/)">$INFO[ListItem.Label,special://skin/extras/moviesgenres/,.jpg]</value>
	    <value condition="String.IsEqual(Container.FolderPath,videodb://tvshows/genres/)">$INFO[ListItem.Label,special://skin/extras/tvshowsgenres/,.jpg]</value>
		</variable>
  
    <variable name="ThumbnailsOnThumbLabel">
      <value condition="Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0) + !String.IsEmpty(ListItem.Property(UnWatchedEpisodes))">$INFO[ListItem.Property(UnWatchedEpisodes)]</value>
      <value condition="Container.Content(Episodes) + !String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.Season,,x]$INFO[ListItem.Episode]</value>
      <value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Label2]</value>
    </variable>

  	<variable name="WallViewsGlows">
  		<value condition="Control.IsVisible(53) + Skin.Hassetting(Disable3DWallView_PosterGlow)">views/wall/poster_shadow.png</value>
  		<value condition="Control.IsVisible(54) + Skin.Hassetting(DisableWallView_PosterGlow)">views/wall/poster_shadow.png</value>
  		<value condition="Control.IsVisible(58) + Skin.Hassetting(DisableListWallView_PosterGlow)">views/wall/poster_shadow.png</value>
        <value condition="Control.IsVisible(59) + Skin.Hassetting(Disable3DWallMusicView_ThumbGlow)">views/wall/square_shadow.png</value>
        <value condition="Control.IsVisible(64) + Skin.Hassetting(DisablePostersView2_PosterGlow)">views/posters/bg_bottom_shadow.png</value>
        <value condition="Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(58)">views/wall/poster_blue_shadow.png</value>
        <value condition="Control.IsVisible(59)">views/wall/square_blue_shadow.png</value>
        <value condition="Control.IsVisible(64)">views/posters/bg_bottom_shadow_glow.png</value>
    </variable>

	<variable name="ViewsDef3DFlags">
	  <value condition="ListItem.IsStereoscopic">flags/def/3d.png</value>
	  <value condition="String.IsEqual(ListItem.VideoResolution,4K) | Integer.IsEqual(ListItem.VideoResolution,2160)">flags/def/4k.png</value>
	  <value condition="Integer.IsGreater(ListItem.VideoResolution,719)">flags/def/hd.png</value>
	  <value condition="!String.IsEmpty(ListItem.VideoResolution)">flags/def/sd.png</value>
	</variable>
	<variable name="VideoSourceFlags">
	    <value condition="String.Contains(ListItem.FileNameAndPath,webdl) | String.Contains(ListItem.FileNameAndPath,web-dl) | String.Contains(ListItem.FileNameAndPath,WEBRip)">flags/def/source/webdl.png</value>
		<value condition="String.Contains(ListItem.FileNameAndPath,dvd)">flags/def/source/dvd.png</value>
		<value condition="String.Contains(ListItem.FileNameAndPath,hdtv) | String.Contains(ListItem.FileNameAndPath,pdtv) | String.Contains(ListItem.FileNameAndPath,dsr)">flags/def/source/hdtv.png</value>
	    <value condition="String.Contains(ListItem.FileNameAndPath,bluray) | String.Contains(ListItem.FileNameAndPath,bdrip) | String.Contains(ListItem.FileNameAndPath,blu-ray) | String.Contains(ListItem.FileNameAndPath,bd25) | String.Contains(ListItem.FileNameAndPath,bd50)">flags/def/source/bluray.png</value>
		<value condition="ListItem.IsStereoscopic">flags/def/source/3d.png</value>
		<value condition="String.Contains(ListItem.FileNameAndPath,2160p) | String.Contains(ListItem.FileNameAndPath,UHD) | String.Contains(ListItem.FileNameAndPath,UltraHD) | String.Contains(ListItem.FileNameAndPath,Ultra-HD) | String.Contains(ListItem.FileNameAndPath,4K)">flags/def/source/4k.png</value>				
	</variable>
</includes>    